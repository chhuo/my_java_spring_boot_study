<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 1. 继承 Spring Boot 的“父项目” -->
    <!-- 这是 Spring Boot 的“魔法”之一，它帮你自动管理了所有依赖的版本，你不用再为版本冲突头疼。 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.0</version> <!-- 使用一个较新的稳定版本 -->
    </parent>

    <!-- 2. 项目基本信息 -->
    <groupId>com.example</groupId>
    <artifactId>my_java_spring_boot_study</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>my_java_spring_boot_study</name>
    <description>My first Spring Boot project on GitHub</description>

    <properties>
        <!-- 3. 指定 Java 版本 -->
        <!-- Spring Boot 3.x 需要 Java 17 或更高版本。 -->
        <java.version>21</java.version>
    </properties>

    <dependencies>
        <!-- 4. 添加 Web 依赖 -->
        <!-- 这是我们需要的核心依赖。它会自动帮你引入 Tomcat 服务器和 Spring MVC 框架，让你能轻松开发 Web 应用。 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 5. 添加 Spring Boot Maven 插件 -->
            <!-- 这个插件非常重要，它能把你的项目打包成一个可直接运行的 JAR 文件。 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>